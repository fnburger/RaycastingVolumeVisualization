#ifndef GL_ES
#version 330 es
#endif

uniform vec3 cameraPos;

out vec3 transformedEye;
out vec3 rayDir;

void main() {
    mat4 mvp = projectionMatrix * viewMatrix * modelMatrix;
    //mat4 pvm = modelMatrix * viewMatrix * projectionMatrix;

    gl_Position = mvp * vec4(position, 1);

    transformedEye = cameraPos;
    //transformedEye = (modelMatrix * vec4(cameraPos, 1)).xyz; 
    //transformedEye = (inverse(viewMatrix) * vec4(cameraPos, 1.0)).xyz;
    rayDir = position - transformedEye;
    //rayDir = normalize((modelMatrix * vec4(position, 1)).xyz - transformedEye); 
    //rayDir = (inverse(viewMatrix) * vec4(position, 1.0)).xyz - transformedEye;

}
